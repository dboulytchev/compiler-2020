-- Statement evaluator.

import State;
import Expr;
import World;

-- Evaluates a statement "stmt" in a configuration "c".
-- A configuration is a pair of a state "s" and a world "w".
-- Returns a final configuration (if any)
fun eval ([state, world], stmt) {
  case stmt of 
      Seq(stmt1, stmt2) -> eval(eval([state, world], stmt1), stmt2) 
    | Read(x) -> case readWorld(world) of
        [value, world2] -> [state <- [x, value], world2]
      esac
    | Write(expr) -> [state, writeWorld(evalExpr(state, expr), world)]
    | Assn(name, value) -> [state <- [name, evalExpr(state, value)], world] 
    | Skip -> [state, world]
  esac
}

-- Evaluates a program with a given input and returns an output
public fun evalStmt (input, stmt) {
  eval ([emptyState, createWorld (input)], stmt).snd.getOutput
}
