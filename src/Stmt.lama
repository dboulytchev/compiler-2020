-- Statement evaluator.

import State;
import Expr;
import World;

-- Evaluates a statement "stmt" in a configuration "c".
-- A configuration is a pair of a state "s" and a world "w".
-- Returns a final configuration (if any)
fun eval ([state, world], stmt) {
  case stmt of
    Read (x)      -> local newWorld = readWorld (world); 
                     [state <- [x, newWorld[0]], newWorld[1]] 
  | Write (x)     -> [state, evalExpr (state, x).writeWorld (world)]
  | Seq (x1, x2)  -> eval (eval ([state, world], x1), x2)
  | Assn (x, e)   -> [state <- [x, evalExpr (state, e)], world]
  | _             -> [state, world]
  esac
}

-- Evaluates a program with a given input and returns an output
public fun evalStmt (input, stmt) {
  eval ([emptyState, createWorld (input)], stmt).snd.getOutput
}
