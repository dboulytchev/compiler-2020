-- Statement evaluator.

import State;
import Expr;
import World;

-- Evaluates a statement "stmt" in a configuration "c".
-- A configuration is a pair of a state "s" and a world "w".
-- Returns a final configuration (if any)
fun eval (c, stmt) {
  case stmt of
    Read (x) -> local t = readWorld(c.snd); [c.fst <- [x, t.fst], t.snd]
  | Write (e) -> [c.fst, writeWorld(evalExpr(c.fst, e), c.snd)]
  | Assn (x, e) -> [c.fst <- [x, evalExpr(c.fst, e)], c.snd]
  | Seq (s1, s2) -> eval(eval(c, s1), s2)
  | _ -> c
  esac
}

-- Evaluates a program with a given input and returns an output
public fun evalStmt (input, stmt) {
  eval ([emptyState, createWorld (input)], stmt).snd.getOutput
}
