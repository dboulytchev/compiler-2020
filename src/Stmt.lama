-- Statement evaluator.

import State;
import Expr;
import World;

-- Evaluates a statement "stmt" in a configuration "c".
-- A configuration is a pair of a state "s" and a world "w".
-- Returns a final configuration (if any)
--
-- A statement is represented by a data structure of the following shape:
--
-- stmt = Assn   (string, expr)     |
--        Seq    (stmt, stmt)       |
--        Skip                      |
--        Read   (string)           |
--        Write  (expr)             |

fun eval ([s, w], stmt) {
	case stmt of
		Read (x) -> 
			case
        readWorld (w) of [v, nw] ->	[s <- [x, v], nw]
			esac

		| Write (e) -> [s, writeWorld (evalExpr (s, e), w)]

		| Assn (x, e) -> [s <- [x, evalExpr (s, e)], w]

		| Seq (s1, s2) -> eval (eval ([s, w], s1), s2)

		| Skip -> [s, w]
	esac
}

-- Evaluates a program with a given input and returns an output
public fun evalStmt (input, stmt) {
  eval ([emptyState, createWorld (input)], stmt).snd.getOutput
}
