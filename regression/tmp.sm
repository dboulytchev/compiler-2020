PUBLIC ("main")
EXTERN ("LcompileX86")
EXTERN ("LcompileSM")
EXTERN ("LevalSM")
EXTERN ("Li__Infix_6045")
EXTERN ("LemptyState")
EXTERN ("LevalStmt")
EXTERN ("LgetOutput")
EXTERN ("LreadWorld")
EXTERN ("LwriteWorld")
EXTERN ("LcreateWorld")
EXTERN ("Lfix")
EXTERN ("Li__Infix_35")
EXTERN ("Li__Infix_36")
EXTERN ("Lid")
EXTERN ("LiteriArray")
EXTERN ("LiterArray")
EXTERN ("LfoldrArray")
EXTERN ("LfoldlArray")
EXTERN ("LlistArray")
EXTERN ("LarrayList")
EXTERN ("LmapArray")
EXTERN ("LinitArray")
EXTERN ("Lfilter")
EXTERN ("Lremove")
EXTERN ("Lunzip")
EXTERN ("Lzip")
EXTERN ("Lflatten")
EXTERN ("Lfind")
EXTERN ("Lassoc")
EXTERN ("Lreverse")
EXTERN ("Li__Infix_434343")
EXTERN ("Lmap")
EXTERN ("Liter")
EXTERN ("Lfoldr")
EXTERN ("Lfoldl")
EXTERN ("Lsize")
EXTERN ("Lsingleton")
EXTERN ("Ls__Infix_37")
EXTERN ("Ls__Infix_47")
EXTERN ("Ls__Infix_42")
EXTERN ("Ls__Infix_45")
EXTERN ("Ls__Infix_43")
EXTERN ("Ls__Infix_62")
EXTERN ("Ls__Infix_6261")
EXTERN ("Ls__Infix_60")
EXTERN ("Ls__Infix_6061")
EXTERN ("Ls__Infix_3361")
EXTERN ("Ls__Infix_6161")
EXTERN ("Ls__Infix_3838")
EXTERN ("Ls__Infix_3333")
EXTERN ("Ls__Infix_58")
EXTERN ("Li__Infix_4343")
EXTERN ("Lcompare")
EXTERN ("Lwrite")
EXTERN ("Lread")
EXTERN ("Lfailure")
EXTERN ("Lfwrite")
EXTERN ("Lfread")
EXTERN ("Lfclose")
EXTERN ("Lfopen")
EXTERN ("Lfprintf")
EXTERN ("Lprintf")
EXTERN ("LmakeString")
EXTERN ("Lsprintf")
EXTERN ("LregexpMatch")
EXTERN ("Lregexp")
EXTERN ("Lsubstring")
EXTERN ("LmatchSubString")
EXTERN ("Lstringcat")
EXTERN ("LreadLine")
EXTERN ("Ltl")
EXTERN ("Lhd")
EXTERN ("Lsnd")
EXTERN ("Lfst")
EXTERN ("Lhash")
EXTERN ("Lclone")
EXTERN ("LmakeArray")
EXTERN ("LstringInt")
EXTERN ("global_sysargs")
LABEL ("main")
BEGIN ("main", 0, 1, [])
LD (Global ("sysargs"))
DUP
DUP
ARRAY (1)
CJMP ("nz", "L4")
LABEL ("L5")
DROP
JMP ("L3")
LABEL ("L4")
DUP
CONST (0)
CALL (".elem", 2)
DROP
DROP
DROP
STRING ("%s\\n")
CALL ("Lprogram", 0)
CALL ("LcompileSM", 1)
CALL ("LcompileX86", 1)
CALL ("Lprintf", 2)
JMP ("L0")
LABEL ("L3")
DUP
DROP
DROP
LDA (Local (0))
CLOSURE ("Llambda_0_5", [])
CALL ("Lfix", 1)
CONST (0)
CALLC (1)
CALL ("Lreverse", 1)
STI
DROP
CLOSURE ("Llambda_1_5", [])
LD (Global ("sysargs"))
CONST (1)
CALL (".elem", 2)
DUP
STRING ("-i")
PATT (StrCmp)
CJMP ("z", "L25")
DROP
LD (Local (0))
CALL ("Lprogram", 0)
CALL ("LevalStmt", 2)
JMP ("L19")
LABEL ("L25")
DUP
STRING ("-s")
PATT (StrCmp)
CJMP ("z", "L21")
DROP
LD (Local (0))
CALL ("Lprogram", 0)
CALL ("LcompileSM", 1)
CALL ("LevalSM", 2)
JMP ("L19")
LABEL ("L21")
FAIL ((63, 13), true)
JMP ("L19")
LABEL ("L19")
CALL ("Liter", 2)
JMP ("L0")
LABEL ("L0")
END
LABEL ("Llambda_1_5")
BEGIN ("Llambda_1_5", 1, 0, [])
STRING ("%d\\n")
LD (Arg (0))
CALL ("Lprintf", 2)
END
LABEL ("Llambda_0_5")
BEGIN ("Llambda_0_5", 1, 0, [])
CLOSURE ("Llambda_2_13", [Arg (0)])
END
LABEL ("Llambda_2_13")
BEGIN ("Llambda_2_13", 1, 1, [Arg (0)])
CALL ("LreadLine", 0)
DUP
PATT (UnBoxed)
CJMP ("z", "L41")
DROP
LD (Arg (0))
JMP ("L37")
LABEL ("L41")
DUP
DROP
DUP
ST (Local (0))
DROP
DROP
LD (Access (0))
LD (Local (0))
CALL ("LstringInt", 1)
LD (Arg (0))
SEXP ("cons", 2)
CALLC (1)
JMP ("L37")
LABEL ("L37")
END
LABEL ("Lprogram")
BEGIN ("Lprogram", 0, 0, [])
STRING ("z")
CONST (0)
CONST (1)
CALL ("Li__Infix_45", 2)
CONST (2)
CALL ("Li__Infix_45", 2)
CONST (3)
CALL ("Li__Infix_45", 2)
CONST (4)
CALL ("Li__Infix_45", 2)
CONST (5)
CALL ("Li__Infix_45", 2)
CONST (6)
CALL ("Li__Infix_45", 2)
CONST (7)
CALL ("Li__Infix_45", 2)
CONST (8)
CALL ("Li__Infix_45", 2)
CONST (9)
CALL ("Li__Infix_45", 2)
CALL ("Li__Infix_585861", 2)
STRING ("z")
CALL ("Lwrite", 1)
CALL ("Li__Infix_6262", 2)
END
LABEL ("Li__Infix_6262")
BEGIN ("Li__Infix_6262", 2, 0, [])
LD (Arg (0))
LD (Arg (1))
SEXP ("Seq", 2)
END
LABEL ("Li__Infix_585861")
BEGIN ("Li__Infix_585861", 2, 0, [])
LD (Arg (0))
LD (Arg (1))
CALL ("Lopnd", 1)
SEXP ("Assn", 2)
END
LABEL ("Lwrite")
BEGIN ("Lwrite", 1, 0, [])
LD (Arg (0))
CALL ("Lopnd", 1)
SEXP ("Write", 1)
END
LABEL ("Lread")
BEGIN ("Lread", 1, 0, [])
LD (Arg (0))
SEXP ("Read", 1)
END
LABEL ("Li__Infix_3333")
BEGIN ("Li__Infix_3333", 2, 0, [])
STRING ("!!")
LD (Arg (0))
CALL ("Lopnd", 1)
LD (Arg (1))
CALL ("Lopnd", 1)
SEXP ("Binop", 3)
END
LABEL ("Li__Infix_3838")
BEGIN ("Li__Infix_3838", 2, 0, [])
STRING ("&&")
LD (Arg (0))
CALL ("Lopnd", 1)
LD (Arg (1))
CALL ("Lopnd", 1)
SEXP ("Binop", 3)
END
LABEL ("Li__Infix_6261")
BEGIN ("Li__Infix_6261", 2, 0, [])
STRING (">=")
LD (Arg (0))
CALL ("Lopnd", 1)
LD (Arg (1))
CALL ("Lopnd", 1)
SEXP ("Binop", 3)
END
LABEL ("Li__Infix_62")
BEGIN ("Li__Infix_62", 2, 0, [])
STRING (">")
LD (Arg (0))
CALL ("Lopnd", 1)
LD (Arg (1))
CALL ("Lopnd", 1)
SEXP ("Binop", 3)
END
LABEL ("Li__Infix_6061")
BEGIN ("Li__Infix_6061", 2, 0, [])
STRING ("<=")
LD (Arg (0))
CALL ("Lopnd", 1)
LD (Arg (1))
CALL ("Lopnd", 1)
SEXP ("Binop", 3)
END
LABEL ("Li__Infix_60")
BEGIN ("Li__Infix_60", 2, 0, [])
STRING ("<")
LD (Arg (0))
CALL ("Lopnd", 1)
LD (Arg (1))
CALL ("Lopnd", 1)
SEXP ("Binop", 3)
END
LABEL ("Li__Infix_3361")
BEGIN ("Li__Infix_3361", 2, 0, [])
STRING ("!=")
LD (Arg (0))
CALL ("Lopnd", 1)
LD (Arg (1))
CALL ("Lopnd", 1)
SEXP ("Binop", 3)
END
LABEL ("Li__Infix_6161")
BEGIN ("Li__Infix_6161", 2, 0, [])
STRING ("==")
LD (Arg (0))
CALL ("Lopnd", 1)
LD (Arg (1))
CALL ("Lopnd", 1)
SEXP ("Binop", 3)
END
LABEL ("Li__Infix_37")
BEGIN ("Li__Infix_37", 2, 0, [])
STRING ("%")
LD (Arg (0))
CALL ("Lopnd", 1)
LD (Arg (1))
CALL ("Lopnd", 1)
SEXP ("Binop", 3)
END
LABEL ("Li__Infix_47")
BEGIN ("Li__Infix_47", 2, 0, [])
STRING ("/")
LD (Arg (0))
CALL ("Lopnd", 1)
LD (Arg (1))
CALL ("Lopnd", 1)
SEXP ("Binop", 3)
END
LABEL ("Li__Infix_42")
BEGIN ("Li__Infix_42", 2, 0, [])
STRING ("*")
LD (Arg (0))
CALL ("Lopnd", 1)
LD (Arg (1))
CALL ("Lopnd", 1)
SEXP ("Binop", 3)
END
LABEL ("Li__Infix_45")
BEGIN ("Li__Infix_45", 2, 0, [])
STRING ("-")
LD (Arg (0))
CALL ("Lopnd", 1)
LD (Arg (1))
CALL ("Lopnd", 1)
SEXP ("Binop", 3)
END
LABEL ("Li__Infix_43")
BEGIN ("Li__Infix_43", 2, 0, [])
STRING ("+")
LD (Arg (0))
CALL ("Lopnd", 1)
LD (Arg (1))
CALL ("Lopnd", 1)
SEXP ("Binop", 3)
END
LABEL ("Lopnd")
BEGIN ("Lopnd", 1, 0, [])
LD (Arg (0))
DUP
PATT (String)
CJMP ("z", "L164")
DROP
LD (Arg (0))
SEXP ("Var", 1)
JMP ("L161")
LABEL ("L164")
DUP
PATT (UnBoxed)
CJMP ("z", "L166")
DROP
LD (Arg (0))
SEXP ("Const", 1)
JMP ("L161")
LABEL ("L166")
DUP
DROP
DROP
LD (Arg (0))
JMP ("L161")
LABEL ("L161")
END
